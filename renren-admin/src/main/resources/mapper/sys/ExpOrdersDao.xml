<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.sys.dao.ExpOrdersDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.modules.sys.entity.ExpOrdersEntity" id="expOrdersMap">
        <result property="id" column="id"/>
        <result property="waybillNumber" column="waybill_number"/>
        <result property="createDate" column="create_date"/>
        <result property="customerCode" column="customer_code"/>
        <result property="customerName" column="customer_name"/>
        <result property="weight" column="weight"/>
        <result property="money" column="money"/>
        <result property="destinationProvince" column="destination_province"/>
        <result property="dotCode" column="dot_code"/>
        <result property="dotName" column="dot_name"/>
        <result property="deptId" column="dept_id"/>
    </resultMap>
    <select id="selectNotInRookie" resultType="io.renren.modules.sys.entity.ExpOrdersEntity">
    SELECT
		s.waybill_number,
    `fun_round`(s.weight+(SELECT base_weight FROM exp_base LIMIT 0,1))AS weight,
		s.sender AS customer_name,
		a.send_province,
		s.branch AS dot_name,
		a.recipient_province AS destination_province,
	    s.create_date,
	    s.dept_id,
    c.`code` AS customer_code
   <!--  p.money*`fun_round`(s.weight+(SELECT base_weight FROM exp_base LIMIT 0,1))AS money -->
	FROM
		exp_daily_scan s
	INNER JOIN exp_balance_account a ON s.waybill_number = a.waybill_number
  INNER JOIN exp_customer c ON c.`name`=s.sender
  <!-- INNER JOIN exp_price p ON c.price_name=p.price_name AND p.province_name=a.recipient_province AND p.weight=`fun_round`(s.weight+(SELECT base_weight FROM exp_base LIMIT 0,1)) -->
	<where>
	  <if test="null!=filter and ''!=filter">
	    ${filter}
	  </if>
	  <if test="list!=null">
	    AND  s.waybill_number IN (
	    <foreach collection="list" item="item" index="index" separator=",">
	      #{item}
	    </foreach>
	    ) 
	  </if>
	</where>
	</select>
	
	<select id="selectInRookie" resultType="io.renren.modules.sys.entity.ExpOrdersEntity">
			SELECT
			a.waybill_number,
			`fun_round`(s.weight+(SELECT base_weight FROM exp_base LIMIT 0,1))AS weight,
			s.sender  AS customer_name,
			a.send_province,
			s.branch AS dot_name,
			a.recipient_province  AS destination_province,
			s.create_date,
		    r.customer_code,
		    a.dept_id
		FROM
			exp_balance_account a
		INNER JOIN exp_order_rookie r ON a.waybill_number = r.waybill_number
		INNER JOIN exp_daily_scan s ON a.waybill_number = s.waybill_number
		<!-- INNER JOIN exp_price p ON c.price_name=p.price_name AND p.province_name=a.send_province AND p.weight=`fun_round`(s.weight+(SELECT base_weight FROM exp_base LIMIT 0,1)) -->
		 <where>
		   <if test="null!=filter and ''!=filter">
		${filter}
		  </if>
		  <if test="null!=dates and ''!=dates">
		   And  DATE_FORMAT(s.create_date,'%Y-%m-%d')=#{dates}
		  </if>
		 </where>
</select>
	<select id="selectMoneyList" resultType="io.renren.modules.sys.entity.ExpOrdersEntity">
		SELECT o.waybill_number,o.customer_code,convert(p.money,decimal),o.create_date,o.customer_name,o.weight from  exp_orders o
		  INNER JOIN exp_customer c ON c.`code`=o.customer_code
		  INNER JOIN exp_price p ON p.price_name=c.price_name AND p.weight=o.weight AND p.province_name=o.destination_province
			  <where>
				 <if test="null!=filter and ''!=filter">
					  ${filter}
				 </if>
				 <if test="null!=dates and ''!=dates">
					 And  DATE_FORMAT(o.create_date,'%Y-%m-%d')=#{dates}
				</if>
			 </where>
	</select>
    <insert id="saveOrdersBatch" parameterType="io.renren.modules.sys.entity.ExpOrdersEntity">
		INSERT INTO exp_orders
		(
       `waybill_number`, `create_date`, `customer_code`, `customer_name`, `weight`, `destination_province`, `dot_code`, `dot_name`, `dept_id`
       )
		VALUES
		<foreach collection="list" item="item" index="index" separator=",">
		(
       #{item.waybillNumber}, #{item.createDate}, #{item.customerCode}, #{item.customerName}, #{item.weight}, #{item.destinationProvince}, #{item.dotCode}, #{item.dotName},#{item.deptId}
       )
       </foreach>
	</insert>
</mapper>